/*
 *     
 *     1.泛化关系： 类与类之间的继承、接口与接口之间的继承关系
 *                 (UML用空心实线三角形箭头指向父类)
 *             
 *     2.实现关系： 类实现接口的关系
 *                 (UML用空心虚	线三角形箭头指向接口)
 *                 
 *     3.关联关系： 类与类之间的连接，一个类能知道另一个类的属性和方法，使用成员变量体现
 *                 (UML用实线箭头指向被访问类，也可双向访问)就像是少了继承之间的多态一样
 */
package v关联关系;

public class Me {
	
	//Filed
	String name;
	
	//在当前类中含有其他类的引用
	//在当前对象中含有其他对象的引用
	//朋友
	Friend f;//Me和Friend关联关系。。。这里的f既是一个成员变量也是一个Friend类型的引用，
			//f就是Friend给Me的一个联系方式，通过创建Me的一个对象用其引用访问f，再用保存Friend对象引用的f访问Friend
			//对象的属性和方法，就像现实生活中我给朋友的一个联系方式f，朋友通过f得知我的信息
			//前提是创建一个我跟一个朋友，即创建两个类的对象
	
	public Me(Friend f){
		this.f=f;
	}
	public Me(String name) {
		// TODO 自动生成的构造函数存根
		this.name=name;
	
	}
	

}
